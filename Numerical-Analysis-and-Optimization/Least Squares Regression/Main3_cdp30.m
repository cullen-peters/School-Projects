TestData = [0.0500000000000000,0.170000000000000,0.280000000000000,0.400000000000000,0.500000000000000,0.600000000000000,0.700000000000000,0.800000000000000; 0.309016994374947,0.876306680043864,0.982287250728689,0.587785252292473,1.22464679914735e-16,-0.587785252292473,-0.951056516295154,-0.951056516295154];
SmallData = [0,0.111111111111111,0.222222222222222,0.333333333333333,0.444444444444444,0.555555555555556,0.666666666666667,0.777777777777778,0.888888888888889,1;0.145395067442227,0.699259968197065,1.20478384744843,0.916856625634609,1.73568775723239,-0.925352658422989,-1.79317494512929,-1.55514832534702,-1.18945933780634,-0.216804648237412];
LargeData = [0,0.0101010101010101,0.0202020202020202,0.0303030303030303,0.0404040404040404,0.0505050505050505,0.0606060606060606,0.0707070707070707,0.0808080808080808,0.0909090909090909,0.101010101010101,0.111111111111111,0.121212121212121,0.131313131313131,0.141414141414141,0.151515151515152,0.161616161616162,0.171717171717172,0.181818181818182,0.191919191919192,0.202020202020202,0.212121212121212,0.222222222222222,0.232323232323232,0.242424242424242,0.252525252525253,0.262626262626263,0.272727272727273,0.282828282828283,0.292929292929293,0.303030303030303,0.313131313131313,0.323232323232323,0.333333333333333,0.343434343434343,0.353535353535354,0.363636363636364,0.373737373737374,0.383838383838384,0.393939393939394,0.404040404040404,0.414141414141414,0.424242424242424,0.434343434343434,0.444444444444444,0.454545454545455,0.464646464646465,0.474747474747475,0.484848484848485,0.494949494949495,0.505050505050505,0.515151515151515,0.525252525252525,0.535353535353535,0.545454545454545,0.555555555555556,0.565656565656566,0.575757575757576,0.585858585858586,0.595959595959596,0.606060606060606,0.616161616161616,0.626262626262626,0.636363636363636,0.646464646464647,0.656565656565657,0.666666666666667,0.676767676767677,0.686868686868687,0.696969696969697,0.707070707070707,0.717171717171717,0.727272727272727,0.737373737373737,0.747474747474748,0.757575757575758,0.767676767676768,0.777777777777778,0.787878787878788,0.797979797979798,0.808080808080808,0.818181818181818,0.828282828282828,0.838383838383838,0.848484848484849,0.858585858585859,0.868686868686869,0.878787878787879,0.888888888888889,0.898989898989899,0.909090909090909,0.919191919191919,0.929292929292929,0.939393939393939,0.949494949494950,0.959595959595960,0.969696969696970,0.979797979797980,0.989898989898990,1;-0.0624449736115535,0.802903165408580,-0.303815391429731,0.581585478004321,0.405459557155344,0.195103424633911,-0.156823917319738,0.287724434776090,0.442851594870816,-0.194056719787581,0.688999051490033,0.231640971541452,0.642958717502250,0.902698379134654,0.323819434668338,0.670447771447488,1.02475680871660,-0.0364762078045704,1.42761994947726,2.14637843273479,1.43460249614806,0.813925570818837,1.19911909294191,0.475846075204558,1.93780006943094,1.47022632934994,1.39052766591957,0.551884310902597,1.13877701340594,0.684695016134490,0.789286109441221,0.637349335783489,0.383126966476980,0.411652610347276,0.727621187606976,-0.0536702015554729,1.05954986227730,0.653795026744881,1.01634916733838,0.752983307078905,0.814203391552476,-0.227883119684543,-0.0519056711140721,0.177433030034350,0.396849438989470,0.846100782855571,0.0753290123865268,0.788776755043924,0.332768449157819,0.618786309244925,0.0317456005237551,-0.423464007778224,-0.898700931762740,-0.142566034834594,0.127543127419071,-0.488314208742866,-0.671323743650876,-0.612547429367467,-1.06197404233614,-0.813564771520996,-0.708528664428124,-0.643848447659439,-0.744585731390029,-0.450081977321640,-0.741102993643397,0.0744378705054165,-0.710013489619802,0.00625311157075748,-1.28391503388979,-0.681727299839889,-1.09396758941300,-0.678731191810464,-0.692856044056556,-2.08986558232606,-1.66339570243402,-1.71937413800247,-0.792916215941347,-0.249707112587948,-1.13521868271650,-0.548740739123676,-0.661377808502049,-1.43544815011494,-0.682719865549928,-1.22567279929046,-0.0564425037273595,-0.792429718888998,0.0834081199816131,-0.902608256787127,-0.348070926327429,-0.624303541913803,-1.55162028248149,-0.977262498989993,-0.123539263005697,-0.399105520654666,-0.871399446924850,-0.564337256614649,-0.0644923740790131,-0.623101956848550,0.424051192749091,-0.320354753363029];

N = 9;
TrainingData = SmallData;
lambdas = [10^-6 10^-3 1 10^3 10^6];
TrainingError = zeros(1,length(lambdas));
TestError = zeros(1,length(lambdas));
Coefficients = zeros(N+1,length(lambdas));

for i=1: length(lambdas)
    [TrainingError(1,i),TestError(1,i),alpha] = LSR_cdp30(TrainingData,TestData,N,lambdas(i));
    alpha = [zeros(N+1-length(alpha),1);alpha];
    Coefficients(:,i) = alpha;
end


display(TrainingError);
display(TestError);

x_test = TestData(1,:);
y_test = TestData(2,:);
x_train = TrainingData(1,:);
y_train = TrainingData(2,:);

scatter(x_train,y_train,'red');
grid on;
hold on;
scatter(x_test,y_test,'blue');
[~,TrainingME_lambda] = min(TrainingError);
[~,TestME_lambda] = min(TestError);
TrainME_alpha = Coefficients(:,TrainingME_lambda);
TestME_alpha = Coefficients(:,TestME_lambda);
if TrainingME_lambda ~= TestME_lambda
    syms x
    fplot(poly2sym(TrainME_alpha),[0 1])
    fplot(poly2sym(TestME_alpha),[0 1])
    legend('show','Location','best')
    legend('Training Data','Test Data',strcat('Least Training Error Graph with lambda= ',num2str(lambdas(TrainingME_lambda))),strcat('Least Test Error Graph with lambda= ',num2str(lambdas(TestME_lambda))));
else
    fplot(poly2sym(TrainME_alpha),[0 1])
    legend('show','Location','best')
    legend('Training Data','Test Data','Least Error Training and Test Graph ()');
    
end
TrainingCoefficients = vpa(poly2sym(TrainME_alpha),4);
TestCoefficients = vpa(poly2sym(TestME_alpha),4);
title('Task 3: Regularized Least Squares on Small Data');
xlabel('x');
ylabel('y');
hold off;

display(TrainingCoefficients);
display(TestCoefficients);